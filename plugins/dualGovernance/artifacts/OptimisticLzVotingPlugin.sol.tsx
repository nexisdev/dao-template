export const OptimisticLzVotingPluginAbi = [
  {
    type: "function",
    name: "DEFAULT_PAYLOAD_SIZE_LIMIT",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "OPTIMISTIC_GOVERNANCE_INTERFACE_ID",
    inputs: [],
    outputs: [{ name: "", type: "bytes4", internalType: "bytes4" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "PROPOSER_PERMISSION_ID",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "UPDATE_BRIDGE_SETTINGS_PERMISSION_ID",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "UPDATE_OPTIMISTIC_GOVERNANCE_SETTINGS_PERMISSION_ID",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "UPGRADE_PLUGIN_PERMISSION_ID",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "bridgeSettings",
    inputs: [],
    outputs: [
      { name: "chainId", type: "uint16", internalType: "uint16" },
      { name: "bridge", type: "address", internalType: "address" },
      { name: "l2VotingAggregator", type: "address", internalType: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "canExecute",
    inputs: [{ name: "_proposalId", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "canVeto",
    inputs: [
      { name: "_proposalId", type: "uint256", internalType: "uint256" },
      { name: "_voter", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createProposal",
    inputs: [
      { name: "_metadata", type: "bytes", internalType: "bytes" },
      {
        name: "_actions",
        type: "tuple[]",
        internalType: "struct IDAO.Action[]",
        components: [
          { name: "to", type: "address", internalType: "address" },
          { name: "value", type: "uint256", internalType: "uint256" },
          { name: "data", type: "bytes", internalType: "bytes" },
        ],
      },
      { name: "_allowFailureMap", type: "uint256", internalType: "uint256" },
      { name: "_startDate", type: "uint64", internalType: "uint64" },
      { name: "_endDate", type: "uint64", internalType: "uint64" },
    ],
    outputs: [{ name: "proposalId", type: "uint256", internalType: "uint256" }],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "dao",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IDAO" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "execute",
    inputs: [{ name: "_proposalId", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "failedMessages",
    inputs: [
      { name: "", type: "uint16", internalType: "uint16" },
      { name: "", type: "bytes", internalType: "bytes" },
      { name: "", type: "uint64", internalType: "uint64" },
    ],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "forceResumeReceive",
    inputs: [
      { name: "_srcChainId", type: "uint16", internalType: "uint16" },
      { name: "_srcAddress", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getConfig",
    inputs: [
      { name: "_version", type: "uint16", internalType: "uint16" },
      { name: "_chainId", type: "uint16", internalType: "uint16" },
      { name: "", type: "address", internalType: "address" },
      { name: "_configType", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getProposal",
    inputs: [{ name: "_proposalId", type: "uint256", internalType: "uint256" }],
    outputs: [
      { name: "open", type: "bool", internalType: "bool" },
      { name: "executed", type: "bool", internalType: "bool" },
      {
        name: "parameters",
        type: "tuple",
        internalType: "struct OptimisticLzVotingPlugin.ProposalParameters",
        components: [
          { name: "startDate", type: "uint64", internalType: "uint64" },
          { name: "endDate", type: "uint64", internalType: "uint64" },
          { name: "snapshotBlock", type: "uint64", internalType: "uint64" },
          { name: "minVetoVotingPower", type: "uint256", internalType: "uint256" },
        ],
      },
      { name: "vetoTally", type: "uint256", internalType: "uint256" },
      {
        name: "actions",
        type: "tuple[]",
        internalType: "struct IDAO.Action[]",
        components: [
          { name: "to", type: "address", internalType: "address" },
          { name: "value", type: "uint256", internalType: "uint256" },
          { name: "data", type: "bytes", internalType: "bytes" },
        ],
      },
      { name: "allowFailureMap", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTrustedRemoteAddress",
    inputs: [{ name: "_remoteChainId", type: "uint16", internalType: "uint16" }],
    outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getVotingToken",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IVotesUpgradeable" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasVetoed",
    inputs: [
      { name: "_proposalId", type: "uint256", internalType: "uint256" },
      { name: "_voter", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "implementation",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      { name: "_dao", type: "address", internalType: "contract IDAO" },
      {
        name: "_governanceSettings",
        type: "tuple",
        internalType: "struct OptimisticLzVotingPlugin.OptimisticGovernanceSettings",
        components: [
          { name: "minVetoRatio", type: "uint32", internalType: "uint32" },
          { name: "minDuration", type: "uint64", internalType: "uint64" },
          { name: "minProposerVotingPower", type: "uint256", internalType: "uint256" },
        ],
      },
      { name: "_token", type: "address", internalType: "contract IVotesUpgradeable" },
      {
        name: "_bridgeSettings",
        type: "tuple",
        internalType: "struct OptimisticLzVotingPlugin.BridgeSettings",
        components: [
          { name: "chainId", type: "uint16", internalType: "uint16" },
          { name: "bridge", type: "address", internalType: "address" },
          { name: "l2VotingAggregator", type: "address", internalType: "address" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isMinVetoRatioReached",
    inputs: [{ name: "_proposalId", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isTrustedRemote",
    inputs: [
      { name: "_srcChainId", type: "uint16", internalType: "uint16" },
      { name: "_srcAddress", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lzEndpoint",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract ILayerZeroEndpoint" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lzReceive",
    inputs: [
      { name: "_srcChainId", type: "uint16", internalType: "uint16" },
      { name: "_srcAddress", type: "bytes", internalType: "bytes" },
      { name: "_nonce", type: "uint64", internalType: "uint64" },
      { name: "_payload", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "minDstGasLookup",
    inputs: [
      { name: "", type: "uint16", internalType: "uint16" },
      { name: "", type: "uint16", internalType: "uint16" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nonblockingLzReceive",
    inputs: [
      { name: "_srcChainId", type: "uint16", internalType: "uint16" },
      { name: "_srcAddress", type: "bytes", internalType: "bytes" },
      { name: "_nonce", type: "uint64", internalType: "uint64" },
      { name: "_payload", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "payloadSizeLimitLookup",
    inputs: [{ name: "", type: "uint16", internalType: "uint16" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pluginType",
    inputs: [],
    outputs: [{ name: "", type: "uint8", internalType: "enum IPlugin.PluginType" }],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "precrime",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proposalCount",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  { type: "function", name: "renounceOwnership", inputs: [], outputs: [], stateMutability: "nonpayable" },
  {
    type: "function",
    name: "retryMessage",
    inputs: [
      { name: "_srcChainId", type: "uint16", internalType: "uint16" },
      { name: "_srcAddress", type: "bytes", internalType: "bytes" },
      { name: "_nonce", type: "uint64", internalType: "uint64" },
      { name: "_payload", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "setConfig",
    inputs: [
      { name: "_version", type: "uint16", internalType: "uint16" },
      { name: "_chainId", type: "uint16", internalType: "uint16" },
      { name: "_configType", type: "uint256", internalType: "uint256" },
      { name: "_config", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setMinDstGas",
    inputs: [
      { name: "_dstChainId", type: "uint16", internalType: "uint16" },
      { name: "_packetType", type: "uint16", internalType: "uint16" },
      { name: "_minGas", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPayloadSizeLimit",
    inputs: [
      { name: "_dstChainId", type: "uint16", internalType: "uint16" },
      { name: "_size", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPrecrime",
    inputs: [{ name: "_precrime", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setReceiveVersion",
    inputs: [{ name: "_version", type: "uint16", internalType: "uint16" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setSendVersion",
    inputs: [{ name: "_version", type: "uint16", internalType: "uint16" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [{ name: "_interfaceId", type: "bytes4", internalType: "bytes4" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "trustedRemoteLookup",
    inputs: [{ name: "", type: "uint16", internalType: "uint16" }],
    outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "updateBridgeSettings",
    inputs: [
      {
        name: "_bridgeSettings",
        type: "tuple",
        internalType: "struct OptimisticLzVotingPlugin.BridgeSettings",
        components: [
          { name: "chainId", type: "uint16", internalType: "uint16" },
          { name: "bridge", type: "address", internalType: "address" },
          { name: "l2VotingAggregator", type: "address", internalType: "address" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateOptimisticGovernanceSettings",
    inputs: [
      {
        name: "_governanceSettings",
        type: "tuple",
        internalType: "struct OptimisticLzVotingPlugin.OptimisticGovernanceSettings",
        components: [
          { name: "minVetoRatio", type: "uint32", internalType: "uint32" },
          { name: "minDuration", type: "uint64", internalType: "uint64" },
          { name: "minProposerVotingPower", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeTo",
    inputs: [{ name: "newImplementation", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      { name: "newImplementation", type: "address", internalType: "address" },
      { name: "data", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "veto",
    inputs: [{ name: "_proposalId", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AdminChanged",
    inputs: [
      { name: "previousAdmin", type: "address", indexed: false, internalType: "address" },
      { name: "newAdmin", type: "address", indexed: false, internalType: "address" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BeaconUpgraded",
    inputs: [{ name: "beacon", type: "address", indexed: true, internalType: "address" }],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [{ name: "version", type: "uint8", indexed: false, internalType: "uint8" }],
    anonymous: false,
  },
  {
    type: "event",
    name: "MessageFailed",
    inputs: [
      { name: "_srcChainId", type: "uint16", indexed: false, internalType: "uint16" },
      { name: "_srcAddress", type: "bytes", indexed: false, internalType: "bytes" },
      { name: "_nonce", type: "uint64", indexed: false, internalType: "uint64" },
      { name: "_payload", type: "bytes", indexed: false, internalType: "bytes" },
      { name: "_reason", type: "bytes", indexed: false, internalType: "bytes" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OptimisticGovernanceSettingsUpdated",
    inputs: [
      { name: "minVetoRatio", type: "uint32", indexed: false, internalType: "uint32" },
      { name: "minDuration", type: "uint64", indexed: false, internalType: "uint64" },
      { name: "minProposerVotingPower", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      { name: "previousOwner", type: "address", indexed: true, internalType: "address" },
      { name: "newOwner", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ProposalCreated",
    inputs: [
      { name: "proposalId", type: "uint256", indexed: true, internalType: "uint256" },
      { name: "creator", type: "address", indexed: true, internalType: "address" },
      { name: "startDate", type: "uint64", indexed: false, internalType: "uint64" },
      { name: "endDate", type: "uint64", indexed: false, internalType: "uint64" },
      { name: "metadata", type: "bytes", indexed: false, internalType: "bytes" },
      {
        name: "actions",
        type: "tuple[]",
        indexed: false,
        internalType: "struct IDAO.Action[]",
        components: [
          { name: "to", type: "address", internalType: "address" },
          { name: "value", type: "uint256", internalType: "uint256" },
          { name: "data", type: "bytes", internalType: "bytes" },
        ],
      },
      { name: "allowFailureMap", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ProposalExecuted",
    inputs: [{ name: "proposalId", type: "uint256", indexed: true, internalType: "uint256" }],
    anonymous: false,
  },
  {
    type: "event",
    name: "RetryMessageSuccess",
    inputs: [
      { name: "_srcChainId", type: "uint16", indexed: false, internalType: "uint16" },
      { name: "_srcAddress", type: "bytes", indexed: false, internalType: "bytes" },
      { name: "_nonce", type: "uint64", indexed: false, internalType: "uint64" },
      { name: "_payloadHash", type: "bytes32", indexed: false, internalType: "bytes32" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetMinDstGas",
    inputs: [
      { name: "_dstChainId", type: "uint16", indexed: false, internalType: "uint16" },
      { name: "_type", type: "uint16", indexed: false, internalType: "uint16" },
      { name: "_minDstGas", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetPrecrime",
    inputs: [{ name: "precrime", type: "address", indexed: false, internalType: "address" }],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetTrustedRemote",
    inputs: [
      { name: "_remoteChainId", type: "uint16", indexed: false, internalType: "uint16" },
      { name: "_path", type: "bytes", indexed: false, internalType: "bytes" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetTrustedRemoteAddress",
    inputs: [
      { name: "_remoteChainId", type: "uint16", indexed: false, internalType: "uint16" },
      { name: "_remoteAddress", type: "bytes", indexed: false, internalType: "bytes" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [{ name: "implementation", type: "address", indexed: true, internalType: "address" }],
    anonymous: false,
  },
  {
    type: "event",
    name: "VetoCast",
    inputs: [
      { name: "proposalId", type: "uint256", indexed: true, internalType: "uint256" },
      { name: "voter", type: "address", indexed: true, internalType: "address" },
      { name: "votingPower", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "DaoUnauthorized",
    inputs: [
      { name: "dao", type: "address", internalType: "address" },
      { name: "where", type: "address", internalType: "address" },
      { name: "who", type: "address", internalType: "address" },
      { name: "permissionId", type: "bytes32", internalType: "bytes32" },
    ],
  },
  {
    type: "error",
    name: "DateOutOfBounds",
    inputs: [
      { name: "limit", type: "uint64", internalType: "uint64" },
      { name: "actual", type: "uint64", internalType: "uint64" },
    ],
  },
  {
    type: "error",
    name: "MinDurationOutOfBounds",
    inputs: [
      { name: "limit", type: "uint64", internalType: "uint64" },
      { name: "actual", type: "uint64", internalType: "uint64" },
    ],
  },
  {
    type: "error",
    name: "MinProposerVotingPowerOutOfBounds",
    inputs: [
      { name: "limit", type: "uint256", internalType: "uint256" },
      { name: "actual", type: "uint256", internalType: "uint256" },
    ],
  },
  { type: "error", name: "NoVotingPower", inputs: [] },
  {
    type: "error",
    name: "ProposalCreationForbidden",
    inputs: [{ name: "sender", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "ProposalExecutionForbidden",
    inputs: [{ name: "proposalId", type: "uint256", internalType: "uint256" }],
  },
  {
    type: "error",
    name: "ProposalVetoingForbidden",
    inputs: [
      { name: "proposalId", type: "uint256", internalType: "uint256" },
      { name: "account", type: "address", internalType: "address" },
    ],
  },
  {
    type: "error",
    name: "RatioOutOfBounds",
    inputs: [
      { name: "limit", type: "uint256", internalType: "uint256" },
      { name: "actual", type: "uint256", internalType: "uint256" },
    ],
  },
] as const;
